// <autogenerated/>
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace GameStore.Data.Migrations
{
    /// <inheritdoc />
    public partial class AddUserAndRoles : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Roles",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    IsSystemRole = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Roles", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "UserPermissions",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserPermissions", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Username = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    FirstName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    LastName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    PasswordHash = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Email = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    IsActive = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "RoleUserPermission",
                columns: table => new
                {
                    PermissionsId = table.Column<int>(type: "int", nullable: false),
                    RoleId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RoleUserPermission", x => new { x.PermissionsId, x.RoleId });
                    table.ForeignKey(
                        name: "FK_RoleUserPermission_Roles_RoleId",
                        column: x => x.RoleId,
                        principalTable: "Roles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RoleUserPermission_UserPermissions_PermissionsId",
                        column: x => x.PermissionsId,
                        principalTable: "UserPermissions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RoleUser",
                columns: table => new
                {
                    RolesId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RoleUser", x => new { x.RolesId, x.UserId });
                    table.ForeignKey(
                        name: "FK_RoleUser_Roles_RolesId",
                        column: x => x.RolesId,
                        principalTable: "Roles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RoleUser_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Roles",
                columns: new[] { "Id", "IsSystemRole", "Name" },
                values: new object[,]
                {
                    { new Guid("308660dc-ae51-480f-824d-7dca6714c3e2"), true, "Administrator" },
                    { new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d"), true, "Manager" },
                    { new Guid("caddad05-120f-48a8-b659-ff4528e5df97"), true, "Moderator" },
                    { new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836"), true, "User" }
                });

            migrationBuilder.InsertData(
                table: "UserPermissions",
                columns: new[] { "Id", "Description" },
                values: new object[,]
                {
                    { 1, "ManageUsers" },
                    { 2, "ManageRoles" },
                    { 3, "ViewGames" },
                    { 4, "ManageEntities" },
                    { 5, "ViewDeletedGames" },
                    { 6, "EditDeletedGames" },
                    { 7, "ViewOrders" },
                    { 8, "EditOrders" },
                    { 9, "ViewOrderHistory" },
                    { 10, "ChangeOrderStatus" },
                    { 11, "AddComments" },
                    { 12, "ManageComments" },
                    { 13, "ManageDeletedGameComments" },
                    { 14, "BanUsers" },
                    { 15, "ReadOnly" }
                });

            migrationBuilder.InsertData(
                table: "RoleUserPermission",
                columns: new[] { "PermissionsId", "RoleId" },
                values: new object[,]
                {
                    { 1, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 2, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 3, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 3, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 3, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 3, new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836") },
                    { 4, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 4, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 5, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 6, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 7, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 7, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 8, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 8, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 9, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 9, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 10, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 10, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 11, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 11, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 11, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 11, new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836") },
                    { 12, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 12, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 12, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 13, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 14, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 14, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 14, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 15, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") }
                });

            migrationBuilder.CreateIndex(
                name: "IX_RoleUser_UserId",
                table: "RoleUser",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_RoleUserPermission_RoleId",
                table: "RoleUserPermission",
                column: "RoleId");

            migrationBuilder.CreateIndex(
                name: "IX_Users_Email",
                table: "Users",
                column: "Email",
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "RoleUser");

            migrationBuilder.DropTable(
                name: "RoleUserPermission");

            migrationBuilder.DropTable(
                name: "Users");

            migrationBuilder.DropTable(
                name: "Roles");

            migrationBuilder.DropTable(
                name: "UserPermissions");
        }
    }
}
