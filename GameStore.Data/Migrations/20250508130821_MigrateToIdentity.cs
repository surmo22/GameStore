// <autogenerated/>
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace GameStore.Data.Migrations
{
    /// <inheritdoc />
    public partial class MigrateToIdentity : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "RoleUser");

            migrationBuilder.DropTable(
                name: "RoleUserPermission");

            migrationBuilder.DropTable(
                name: "UserPermissions");

            migrationBuilder.DropPrimaryKey(
                name: "PK_Users",
                table: "Users");

            migrationBuilder.DropIndex(
                name: "IX_Users_Email",
                table: "Users");

            migrationBuilder.DropPrimaryKey(
                name: "PK_Roles",
                table: "Roles");

            migrationBuilder.DropColumn(
                name: "FirstName",
                table: "Users");

            migrationBuilder.DropColumn(
                name: "LastName",
                table: "Users");

            migrationBuilder.RenameTable(
                name: "Users",
                newName: "AspNetUsers");

            migrationBuilder.RenameTable(
                name: "Roles",
                newName: "AspNetRoles");

            migrationBuilder.RenameColumn(
                name: "Username",
                table: "AspNetUsers",
                newName: "UserName");

            migrationBuilder.AlterColumn<string>(
                name: "UserName",
                table: "AspNetUsers",
                type: "nvarchar(256)",
                maxLength: 256,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "PasswordHash",
                table: "AspNetUsers",
                type: "nvarchar(max)",
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(max)");

            migrationBuilder.AlterColumn<bool>(
                name: "IsActive",
                table: "AspNetUsers",
                type: "bit",
                nullable: false,
                defaultValue: true,
                oldClrType: typeof(bool),
                oldType: "bit");

            migrationBuilder.AlterColumn<string>(
                name: "Email",
                table: "AspNetUsers",
                type: "nvarchar(256)",
                maxLength: 256,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(100)",
                oldMaxLength: 100);

            migrationBuilder.AddColumn<int>(
                name: "AccessFailedCount",
                table: "AspNetUsers",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<string>(
                name: "ConcurrencyStamp",
                table: "AspNetUsers",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<bool>(
                name: "EmailConfirmed",
                table: "AspNetUsers",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<bool>(
                name: "LockoutEnabled",
                table: "AspNetUsers",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<DateTimeOffset>(
                name: "LockoutEnd",
                table: "AspNetUsers",
                type: "datetimeoffset",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "NormalizedEmail",
                table: "AspNetUsers",
                type: "nvarchar(256)",
                maxLength: 256,
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "NormalizedUserName",
                table: "AspNetUsers",
                type: "nvarchar(256)",
                maxLength: 256,
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "PhoneNumber",
                table: "AspNetUsers",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<bool>(
                name: "PhoneNumberConfirmed",
                table: "AspNetUsers",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<string>(
                name: "SecurityStamp",
                table: "AspNetUsers",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<bool>(
                name: "TwoFactorEnabled",
                table: "AspNetUsers",
                type: "bit",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AlterColumn<string>(
                name: "Name",
                table: "AspNetRoles",
                type: "nvarchar(256)",
                maxLength: 256,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AddColumn<string>(
                name: "ConcurrencyStamp",
                table: "AspNetRoles",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "NormalizedName",
                table: "AspNetRoles",
                type: "nvarchar(256)",
                maxLength: 256,
                nullable: true);

            migrationBuilder.AddPrimaryKey(
                name: "PK_AspNetUsers",
                table: "AspNetUsers",
                column: "Id");

            migrationBuilder.AddPrimaryKey(
                name: "PK_AspNetRoles",
                table: "AspNetRoles",
                column: "Id");

            migrationBuilder.CreateTable(
                name: "AspNetRoleClaims",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RoleId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ClaimType = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ClaimValue = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetRoleClaims", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AspNetRoleClaims_AspNetRoles_RoleId",
                        column: x => x.RoleId,
                        principalTable: "AspNetRoles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserClaims",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ClaimType = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ClaimValue = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserClaims", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AspNetUserClaims_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserLogins",
                columns: table => new
                {
                    LoginProvider = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProviderKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProviderDisplayName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserLogins", x => new { x.LoginProvider, x.ProviderKey });
                    table.ForeignKey(
                        name: "FK_AspNetUserLogins_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserRoles",
                columns: table => new
                {
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RoleId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserRoles", x => new { x.UserId, x.RoleId });
                    table.ForeignKey(
                        name: "FK_AspNetUserRoles_AspNetRoles_RoleId",
                        column: x => x.RoleId,
                        principalTable: "AspNetRoles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_AspNetUserRoles_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserTokens",
                columns: table => new
                {
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    LoginProvider = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserTokens", x => new { x.UserId, x.LoginProvider, x.Name });
                    table.ForeignKey(
                        name: "FK_AspNetUserTokens_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "AspNetRoleClaims",
                columns: new[] { "Id", "ClaimType", "ClaimValue", "RoleId" },
                values: new object[,]
                {
                    { 1, "permission", "ManageUsers", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 2, "permission", "ManageRoles", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 3, "permission", "ViewGames", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 4, "permission", "ManageEntities", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 5, "permission", "ViewDeletedGames", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 6, "permission", "EditDeletedGames", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 7, "permission", "ViewOrders", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 8, "permission", "EditOrders", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 9, "permission", "ViewOrderHistory", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 10, "permission", "ChangeOrderStatus", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 11, "permission", "AddComments", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 12, "permission", "ManageComments", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 13, "permission", "ManageDeletedGameComments", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 14, "permission", "BanUsers", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 15, "permission", "ReadOnly", new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 16, "permission", "ManageEntities", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 17, "permission", "ViewOrders", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 18, "permission", "EditOrders", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 19, "permission", "ViewOrderHistory", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 20, "permission", "ChangeOrderStatus", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 21, "permission", "ManageComments", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 22, "permission", "BanUsers", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 23, "permission", "ViewGames", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 24, "permission", "AddComments", new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 25, "permission", "ManageComments", new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 26, "permission", "BanUsers", new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 27, "permission", "ViewGames", new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 28, "permission", "AddComments", new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 29, "permission", "ViewGames", new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836") },
                    { 30, "permission", "AddComments", new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836") }
                });

            migrationBuilder.UpdateData(
                table: "AspNetRoles",
                keyColumn: "Id",
                keyValue: new Guid("308660dc-ae51-480f-824d-7dca6714c3e2"),
                columns: new[] { "ConcurrencyStamp", "NormalizedName" },
                values: new object[] { null, "ADMINISTRATOR" });

            migrationBuilder.UpdateData(
                table: "AspNetRoles",
                keyColumn: "Id",
                keyValue: new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d"),
                columns: new[] { "ConcurrencyStamp", "NormalizedName" },
                values: new object[] { null, "MANAGER" });

            migrationBuilder.UpdateData(
                table: "AspNetRoles",
                keyColumn: "Id",
                keyValue: new Guid("caddad05-120f-48a8-b659-ff4528e5df97"),
                columns: new[] { "ConcurrencyStamp", "NormalizedName" },
                values: new object[] { null, "MODERATOR" });

            migrationBuilder.UpdateData(
                table: "AspNetRoles",
                keyColumn: "Id",
                keyValue: new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836"),
                columns: new[] { "ConcurrencyStamp", "NormalizedName" },
                values: new object[] { null, "USER" });

            migrationBuilder.CreateIndex(
                name: "EmailIndex",
                table: "AspNetUsers",
                column: "NormalizedEmail");

            migrationBuilder.CreateIndex(
                name: "UserNameIndex",
                table: "AspNetUsers",
                column: "NormalizedUserName",
                unique: true,
                filter: "[NormalizedUserName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "RoleNameIndex",
                table: "AspNetRoles",
                column: "NormalizedName",
                unique: true,
                filter: "[NormalizedName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_AspNetRoleClaims_RoleId",
                table: "AspNetRoleClaims",
                column: "RoleId");

            migrationBuilder.CreateIndex(
                name: "IX_AspNetUserClaims_UserId",
                table: "AspNetUserClaims",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_AspNetUserLogins_UserId",
                table: "AspNetUserLogins",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_AspNetUserRoles_RoleId",
                table: "AspNetUserRoles",
                column: "RoleId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "AspNetRoleClaims");

            migrationBuilder.DropTable(
                name: "AspNetUserClaims");

            migrationBuilder.DropTable(
                name: "AspNetUserLogins");

            migrationBuilder.DropTable(
                name: "AspNetUserRoles");

            migrationBuilder.DropTable(
                name: "AspNetUserTokens");

            migrationBuilder.DropPrimaryKey(
                name: "PK_AspNetUsers",
                table: "AspNetUsers");

            migrationBuilder.DropIndex(
                name: "EmailIndex",
                table: "AspNetUsers");

            migrationBuilder.DropIndex(
                name: "UserNameIndex",
                table: "AspNetUsers");

            migrationBuilder.DropPrimaryKey(
                name: "PK_AspNetRoles",
                table: "AspNetRoles");

            migrationBuilder.DropIndex(
                name: "RoleNameIndex",
                table: "AspNetRoles");

            migrationBuilder.DropColumn(
                name: "AccessFailedCount",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "ConcurrencyStamp",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "EmailConfirmed",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "LockoutEnabled",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "LockoutEnd",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "NormalizedEmail",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "NormalizedUserName",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "PhoneNumber",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "PhoneNumberConfirmed",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "SecurityStamp",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "TwoFactorEnabled",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "ConcurrencyStamp",
                table: "AspNetRoles");

            migrationBuilder.DropColumn(
                name: "NormalizedName",
                table: "AspNetRoles");

            migrationBuilder.RenameTable(
                name: "AspNetUsers",
                newName: "Users");

            migrationBuilder.RenameTable(
                name: "AspNetRoles",
                newName: "Roles");

            migrationBuilder.RenameColumn(
                name: "UserName",
                table: "Users",
                newName: "Username");

            migrationBuilder.AlterColumn<string>(
                name: "Username",
                table: "Users",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(256)",
                oldMaxLength: 256,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "PasswordHash",
                table: "Users",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(max)",
                oldNullable: true);

            migrationBuilder.AlterColumn<bool>(
                name: "IsActive",
                table: "Users",
                type: "bit",
                nullable: false,
                oldClrType: typeof(bool),
                oldType: "bit",
                oldDefaultValue: true);

            migrationBuilder.AlterColumn<string>(
                name: "Email",
                table: "Users",
                type: "nvarchar(100)",
                maxLength: 100,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(256)",
                oldMaxLength: 256,
                oldNullable: true);

            migrationBuilder.AddColumn<string>(
                name: "FirstName",
                table: "Users",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddColumn<string>(
                name: "LastName",
                table: "Users",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "");

            migrationBuilder.AlterColumn<string>(
                name: "Name",
                table: "Roles",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(256)",
                oldMaxLength: 256,
                oldNullable: true);

            migrationBuilder.AddPrimaryKey(
                name: "PK_Users",
                table: "Users",
                column: "Id");

            migrationBuilder.AddPrimaryKey(
                name: "PK_Roles",
                table: "Roles",
                column: "Id");

            migrationBuilder.CreateTable(
                name: "RoleUser",
                columns: table => new
                {
                    RolesId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RoleUser", x => new { x.RolesId, x.UserId });
                    table.ForeignKey(
                        name: "FK_RoleUser_Roles_RolesId",
                        column: x => x.RolesId,
                        principalTable: "Roles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RoleUser_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UserPermissions",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserPermissions", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "RoleUserPermission",
                columns: table => new
                {
                    PermissionsId = table.Column<int>(type: "int", nullable: false),
                    RoleId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RoleUserPermission", x => new { x.PermissionsId, x.RoleId });
                    table.ForeignKey(
                        name: "FK_RoleUserPermission_Roles_RoleId",
                        column: x => x.RoleId,
                        principalTable: "Roles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RoleUserPermission_UserPermissions_PermissionsId",
                        column: x => x.PermissionsId,
                        principalTable: "UserPermissions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "UserPermissions",
                columns: new[] { "Id", "Description" },
                values: new object[,]
                {
                    { 1, "ManageUsers" },
                    { 2, "ManageRoles" },
                    { 3, "ViewGames" },
                    { 4, "ManageEntities" },
                    { 5, "ViewDeletedGames" },
                    { 6, "EditDeletedGames" },
                    { 7, "ViewOrders" },
                    { 8, "EditOrders" },
                    { 9, "ViewOrderHistory" },
                    { 10, "ChangeOrderStatus" },
                    { 11, "AddComments" },
                    { 12, "ManageComments" },
                    { 13, "ManageDeletedGameComments" },
                    { 14, "BanUsers" },
                    { 15, "ReadOnly" }
                });

            migrationBuilder.InsertData(
                table: "RoleUserPermission",
                columns: new[] { "PermissionsId", "RoleId" },
                values: new object[,]
                {
                    { 1, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 2, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 3, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 3, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 3, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 3, new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836") },
                    { 4, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 4, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 5, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 6, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 7, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 7, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 8, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 8, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 9, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 9, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 10, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 10, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 11, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 11, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 11, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 11, new Guid("cf35304b-0241-4b81-8f57-d0dccdccb836") },
                    { 12, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 12, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 12, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 13, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 14, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") },
                    { 14, new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d") },
                    { 14, new Guid("caddad05-120f-48a8-b659-ff4528e5df97") },
                    { 15, new Guid("308660dc-ae51-480f-824d-7dca6714c3e2") }
                });

            migrationBuilder.CreateIndex(
                name: "IX_Users_Email",
                table: "Users",
                column: "Email",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_RoleUser_UserId",
                table: "RoleUser",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_RoleUserPermission_RoleId",
                table: "RoleUserPermission",
                column: "RoleId");
        }
    }
}
